{"version":3,"names":[],"mappings":"","sources":["behaviors/cascaded-animation-behavior.html"],"sourcesContent":["<link rel=\"import\" href=\"../../bower_components/polymer/polymer.html\">\n<link rel=\"import\" href=\"../../bower_components/neon-animation/animations/cascaded-animation.html\">\n<link rel=\"import\" href=\"../../bower_components/neon-animation/animations/transform-animation.html\">\n<link rel=\"import\" href=\"../../bower_components/neon-animation/neon-animatable-behavior.html\">\n<link rel=\"import\" href=\"../../bower_components/neon-animation/neon-animation-runner-behavior.html\">\n\n<link rel=\"import\" href=\"../../bower_components/neon-animation/neon-animations.html\">\n\n<script>\n    Polymer.CascadedAnimationBehaviorImpl = {\n        properties: {\n            selector: {\n                value: '[cascaded]'\n            },\n            showing: {\n                type: Boolean,\n                observer: '_showingChanged'\n            },\n            animationConfig: {\n                type: Object,\n                value: function () {\n                    return {\n                        'entry': [{\n                            name: 'cascaded-animation',\n                            animation: 'transform-animation',\n                            transformFrom: 'translate3d(0,100%,0)',\n                            transformTo: 'none',\n                            timing: {\n                                delay: 0\n                            }\n                        }, {\n                            name: 'cascaded-animation',\n                            animation: 'fade-in-animation',\n                            timing: {\n                                delay: 0\n                            }\n                        }]\n                    };\n                }\n            }\n        },\n        attached: function () {\n            this.style.opacity = 0;\n            this._updateCascadedNodes();\n        },\n        _showingChanged: function (showing) {\n            if (showing) {\n                this.async(function () {\n                    this.style.opacity = 1;\n                }, 100);\n                this.playAnimation('entry');\n            } else {\n                this.style.opacity = 0;\n            }\n        },\n        _updateCascadedNodes: function () {\n            var nodes = Polymer.dom(this.root).querySelectorAll(this.selector);\n            var entry = this.animationConfig.entry;\n            entry[0].nodes = entry[1].nodes = Array.prototype.slice.call(nodes);\n        }\n    };\n    Polymer.CascadedAnimationBehavior = [\n        Polymer.NeonAnimatableBehavior,\n        Polymer.NeonAnimationRunnerBehavior,\n        Polymer.CascadedAnimationBehaviorImpl\n    ];\n</script>\n"],"file":"behaviors/cascaded-animation-behavior.html","sourceRoot":"/source/"}