{"version":3,"sources":["blocks/featured-videos/featured-videos.html"],"names":[],"mappings":";YACY;gBACI,eAAe;gBACf,yCAAyC;gBACzC,iCAAiC;gBACjC,kDAAkD;gBAClD,uCAAuC;aAC1C;;YAED;gBACI,0BAA0B;gBAC1B,2BAA2B;aAC9B;;YAED;gBACI,oBAAoB;aACvB;;YAED;gBACI,4BAA4B;gBAC5B,gDAAgD;gBAChD,wBAAwB;aAC3B;;YAED;gBACI,oBAAoB;gBACpB,YAAY;gBACZ,gBAAgB;aACnB;;YAED;gBACI,YAAY;aACf;;YAED;gBACI,cAAc;aACjB;;YAED;gBACI,qBAAqB;aACxB;;YAED;gBACI,qBAAqB;gBACrB,0BAA0B;gBAC1B,+BAA+B;gBAC/B,eAAe;gBACf,gBAAgB;aACnB;;YAED;gBACI,wBAAwB;gBACxB,yBAAyB;aAC5B;;YAED;gBACI,mBAAmB;gBACnB,iCAAiC;aACpC;;YAED;gBACI,mBAAmB;gBACnB,mCAAmC;gBACnC,gBAAgB;aACnB;;YAED;;gBACI;;gCACI,4BAA4B;iBAC/B;;gBAED;gCACI,aAAa;gCACb,iBAAiB;iBACpB;CACJ","file":"blocks/featured-videos/featured-videos.html","sourcesContent":["<link rel=\"import\" href=\"../../../bower_components/polymer/polymer.html\">\n\n<link rel=\"import\" href=\"../../../bower_components/iron-flex-layout/iron-flex-layout.html\">\n<link rel=\"import\" href=\"../../../bower_components/paper-icon-button/paper-icon-button.html\">\n<link rel=\"import\" href=\"../../../bower_components/paper-card/paper-card.html\">\n\n<link rel=\"import\" href=\"../video-dialog/video-dialog.html\">\n\n<dom-module id=\"featured-videos\">\n    <template>\n        <style include=\"shared-styles\"></style>\n        <style>\n            :host {\n                display: block;\n                background: var(--default-primary-color);\n                color: var(--text-primary-color);\n                --iron-icon-fill-color: var(--text-primary-color);\n                --paper-card-background-color: #FFFFFF;\n            }\n\n            .videos-header {\n                @apply(--layout-vertical);\n                @apply(--layout-justified);\n            }\n\n            .controls {\n                margin-bottom: 10px;\n            }\n\n            .videos {\n                @apply(--layout-horizontal);\n                transition: all 0.4s cubic-bezier(0, 0, 0.2, 1);\n                will-change: transition;\n            }\n\n            .video-item {\n                padding-right: 24px;\n                width: 100%;\n                min-width: 100%;\n            }\n\n            .card {\n                width: 100%;\n            }\n\n            .header {\n                height: 200px;\n            }\n\n            .thumbnail {\n                @apply(--layout-fit);\n            }\n\n            .play-video {\n                @apply(--layout-fit);\n                @apply(--layout-vertical);\n                @apply(--layout-center-center);\n                margin: 0 auto;\n                cursor: pointer;\n            }\n\n            .play-icon {\n                --iron-icon-width: 48px;\n                --iron-icon-height: 48px;\n            }\n\n            .title {\n                @apply(--ellipsis);\n                color: var(--primary-text-color);\n            }\n\n            .speakers {\n                @apply(--ellipsis);\n                color: var(--secondary-text-color);\n                font-size: 14px;\n            }\n\n            @media (min-width: 601px) {\n                .videos-header {\n                    @apply(--layout-horizontal);\n                }\n\n                .video-item {\n                    width: 400px;\n                    min-width: 400px;\n                }\n            }\n        </style>\n        <div class=\"container\">\n            <div class=\"videos-header\">\n                <h4 class=\"heading\">Featured videos</h4>\n                <div class=\"controls\">\n                    <paper-icon-button icon=\"icons:chevron-left\" on-tap=\"shiftContentLeft\"></paper-icon-button>\n                    <paper-icon-button icon=\"icons:chevron-right\" on-tap=\"shiftContentRight\"></paper-icon-button>\n                </div>\n            </div>\n            <div id=\"videos\" class=\"videos\">\n                <template is=\"dom-repeat\" items=\"[[_videos]]\" as=\"video\">\n                    <div class=\"video-item\">\n                        <paper-card class=\"card\">\n                            <div class=\"header paper-card\">\n                                <iron-image class=\"thumbnail\" src=\"[[video.thumbnail]]\" sizing=\"cover\" preload\n                                            fade></iron-image>\n                                <div class=\"play-video\" on-tap=\"_playVideo\">\n                                    <iron-icon class=\"play-icon\" icon=\"icons:play\"></iron-icon>\n                                </div>\n                            </div>\n                            <div class=\"paper-card-container\">\n                                <div class=\"card-content list\">\n                                    <div class=\"title\">[[video.title]]</div>\n                                    <div class=\"speakers\">[[video.speakers]]</div>\n                                </div>\n                            </div>\n                        </paper-card>\n                    </div>\n                </template>\n            </div>\n        </div>\n        <video-dialog id=\"videoViewer\" title=\"[[_selectedVideo.title]]\" youtube-id=\"[[_selectedVideo.youtubeId]]\"\n                      entry-animation=\"scale-up-animation\"\n                      exit-animation=\"scale-down-animation\" modal></video-dialog>\n    </template>\n    <script>\n        (function () {\n            'use strict';\n\n            class FeaturedVideos {\n                beforeRegister() {\n                    let is = this.constructor.name.replace(/\\W+/g, '-')\n                        .replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase();\n                    this.is = is;\n                    this.properties = {\n                        videos: {\n                            type: Array,\n                            observer: '_videosChanged'\n                        },\n                        _videos: Array,\n                        _selectedVideo: Object\n                    };\n                }\n\n                _videosChanged() {\n                    this._videos = app.randomOrder(this.videos).slice(0, 6);\n                }\n\n                _playVideo(e) {\n                    this._selectedVideo = {\n                        title: e.model.video.title + ' by ' + e.model.video.speakers,\n                        youtubeId: e.model.video.youtubeId\n                    };\n                    this.$.videoViewer.open();\n                }\n\n                shiftContentLeft() {\n                    var transform = this.$.videos.style.transform;\n                    var videos = Polymer.dom(this.root).querySelectorAll('.video-item');\n\n                    var lastX = transform ? parseInt(transform.split('(')[1].split(',')[0]) : 0;\n\n                    var cardRect = videos[videos.length - 1].getBoundingClientRect();\n                    var cardWidth = cardRect.width;\n\n                    var newX = lastX + cardWidth;\n                    if (newX < cardWidth) {\n                        this.$.videos.style.transform = 'translate3d(' + newX + 'px, 0, 0)';\n                    }\n                }\n\n                shiftContentRight() {\n                    var transform = this.$.videos.style.transform;\n                    var videos = Polymer.dom(this.root).querySelectorAll('.video-item');\n\n                    var lastX = transform ? parseInt(transform.split('(')[1].split(',')[0]) : 0;\n\n                    var containerWidth = this.$.videos.getBoundingClientRect().width;\n                    var cardRect = videos[videos.length - 1].getBoundingClientRect();\n                    var lastCardLeft = cardRect.left;\n                    var cardWidth = cardRect.width;\n\n                    var newX = lastX - cardWidth;\n                    if (lastCardLeft > containerWidth) {\n                        this.$.videos.style.transform = 'translate3d(' + newX + 'px, 0, 0)';\n                    }\n                }\n            }\n\n            Polymer(FeaturedVideos);\n        })();\n    </script>\n</dom-module>\n"],"sourceRoot":"/source/"}