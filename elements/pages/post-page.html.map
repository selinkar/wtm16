{"version":3,"sources":["pages/post-page.html"],"names":[],"mappings":";YACY;gBACI,eAAe;;gBAEf,mBAAmB;gBACnB,0BAA0B;aAC7B;;YAED;gBACI,eAAe;gBACf,iBAAiB;aACpB;;YAED;gBACI,qBAAqB;aACxB;;YAED;gBACI,0BAA0B;gBAC1B,+BAA+B;gBAC/B,qBAAqB;gBACrB,iBAAiB;gBACjB,iBAAiB;aACpB;;YAED;gBACI,gBAAgB;gBAChB,oBAAoB;aACvB;;YAED;gBACI,oBAAoB;gBACpB,qBAAqB;gBACrB,gBAAgB;gBAChB,mCAAmC;gBACnC,8CAA8C;aACjD;;YAED;gBACI,0BAA0B;gBAC1B,kCAAkC;gBAClC,iCAAiC;aACpC;;YAED;gBACI,sBAAsB;aACzB;;YAED;gBACI,iBAAiB;aACpB;;YAED;gBACI,6BAA6B;gBAC7B,gBAAgB;gBAChB,mCAAmC;aACtC;;YAED;gBACI,0BAA0B;gBAC1B,gCAAgC;gBAChC,6BAA6B;gBAC7B,sBAAsB;aACzB;;YAED;gBACI,aAAa;gBACb,8BAA8B;aACjC;;YAED;gBACI,4BAA4B;gBAC5B,+BAA+B;gBAC/B,cAAc;gBACd,iBAAiB;gBACjB,gBAAgB;gBAChB,mBAAmB;gBACnB,qBAAqB;gBACrB,kBAAkB;gBAClB,YAAY;aACf;;YAED;;gBACI;;gCACI,4BAA4B;iBAC/B;;gBAED;gCACI,cAAc;gCACd,kBAAkB;iBACrB;;gBACD;gCACI,iBAAiB;iBACpB;;gBAED;gCACI,2BAA2B;iBAC9B;CACJ","file":"pages/post-page.html","sourcesContent":["<link rel=\"import\" href=\"../../bower_components/polymer/polymer.html\">\n\n<link rel=\"import\" href=\"../../bower_components/iron-ajax/iron-ajax.html\">\n<link rel=\"import\" href=\"../../bower_components/iron-flex-layout/iron-flex-layout.html\">\n<link rel=\"import\" href=\"../../bower_components/paper-spinner/paper-spinner.html\">\n<link rel=\"import\" href=\"../../bower_components/marked-element/marked-element.html\">\n<link rel=\"import\" href=\"../../bower_components/disqus-comments/disqus-comments.html\">\n\n<link rel=\"import\" href=\"../blocks/footer-block/footer-block.html\">\n\n<dom-module id=\"post-page\">\n    <template>\n        <style include=\"shared-styles\"></style>\n        <style>\n            :host {\n                display: block;\n\n                --grid-gutter: 4px;\n                --grid-item-height: 300px;\n            }\n\n            .post-wrapper > .container {\n                padding-top: 0;\n                max-width: 896px;\n            }\n\n            .post-wrapper > .container:not(.latest-post-wrapper) {\n                padding-bottom: 20px;\n            }\n\n            .spinner-wrapper {\n                @apply(--layout-vertical);\n                @apply(--layout-center-center);\n                @apply(--layout-fit);\n                min-height: 50vh;\n                max-height: 50vh;\n            }\n\n            .post-wrapper {\n                margin-top: 2px;\n                background: #FFFFFF;\n            }\n\n            .post-meta {\n                margin-bottom: 20px;\n                padding: 30px 0 20px;\n                font-size: 13px;\n                color: var(--secondary-text-color);\n                border-bottom: 1px solid var(--divider-color);\n            }\n\n            .latest-post-wrapper {\n                @apply(--layout-vertical);\n                padding-right: var(--grid-gutter);\n                padding-left: var(--grid-gutter);\n            }\n\n            .latest-post {\n                @apply(--layout-flex);\n            }\n\n            .latest-post:nth-of-type(2) {\n                margin-top: 10px;\n            }\n\n            .latest-post-label {\n                margin: 0 var(--grid-gutter);\n                font-size: 14px;\n                color: var(--secondary-text-color);\n            }\n\n            .post {\n                @apply(--layout-vertical);\n                height: var(--grid-item-height);\n                margin: var(--grid-gutter) 0;\n                text-decoration: none;\n            }\n\n            .image {\n                height: 100%;\n                background: no-repeat 50% 50%;\n            }\n\n            .title {\n                @apply(--layout-horizontal);\n                @apply(--layout-center-center);\n                padding: 12px;\n                min-height: 42px;\n                font-size: 20px;\n                text-align: center;\n                letter-spacing: .8px;\n                line-height: 1.05;\n                color: #fff;\n            }\n\n            @media (min-width: 601px) {\n                .latest-post-wrapper {\n                    @apply(--layout-horizontal);\n                }\n\n                .latest-post:nth-of-type(2) {\n                    margin-top: 0;\n                    text-align: right;\n                }\n                .post-wrapper {\n                    margin-top: 52px;\n                }\n\n                .post {\n                    margin: var(--grid-gutter);\n                }\n            }\n        </style>\n        <div id=\"pageHeader\" class=\"container page-header\">\n            <h3 class=\"page-title\">[[_post.title]]</h3>\n        </div>\n        <div id=\"animationWrapper\">\n            <div class=\"post-wrapper\">\n                <div class=\"container\" cascaded>\n                    <div class=\"post-meta\">\n                        <span>Posted: [[_post.date]]</span>\n                    </div>\n\n                    <marked-element class=\"post-content\" markdown=\"[[postBody]]\">\n                        <div class=\"markdown-html\"></div>\n                    </marked-element>\n                </div>\n                <div class=\"container latest-post-wrapper\">\n                    <div class=\"latest-post\">\n                        <template is=\"dom-if\" if=\"{{_latestPosts.0}}\">\n                            <span class=\"latest-post-label\">Next post</span>\n                            <a data-route=\"blog/[[_latestPosts.0.id]]\" href=\"/blog/[[_latestPosts.0.id]]\"\n                               class=\"post\" cascaded>\n                                <iron-image class=\"image\" src=\"[[_latestPosts.0.image]]\"\n                                            style$=\"background-color: [[_latestPosts.0.primaryColor]];\" sizing=\"cover\"\n                                            preload\n                                            fade></iron-image>\n                                <div class=\"title\" style$=\"background-color: [[_latestPosts.0.secondaryColor]];\">\n                                    [[_latestPosts.0.title]]\n                                </div>\n                            </a>\n                        </template>\n                    </div>\n                    <div class=\"latest-post\">\n                        <template is=\"dom-if\" if=\"[[_latestPosts.1]]\">\n                            <span class=\"latest-post-label\">Previous post</span>\n                            <a data-route=\"blog/[[_latestPosts.1.id]]\" href=\"/blog/[[_latestPosts.1.id]]\"\n                               class=\"post\" cascaded>\n                                <iron-image class=\"image\" src=\"[[_latestPosts.1.image]]\"\n                                            style$=\"background-color: [[_latestPosts.1.primaryColor]];\" sizing=\"cover\"\n                                            preload\n                                            fade></iron-image>\n                                <div class=\"title\" style$=\"background-color: [[_latestPosts.1.secondaryColor]];\">\n                                    [[_latestPosts.1.title}}\n                                </div>\n                            </a>\n                        </template>\n                    </div>\n                </div>\n                <div class=\"container\">\n                    <disqus-comments id=\"disqus\" shortname=\"wtm16\" identifier=\"[[_post.id]]\" title=\"[[_post.title]]\" https></disqus-comments>\n                </div>\n            </div>\n\n\n            <footer-block mailchimp-url=\"http://www.meetup.com/GDGIstanbul/join/\" mailchimp-name=\"meetup\"\n                          cascaded></footer-block>\n        </div>\n\n        <div class=\"spinner-wrapper\">\n            <paper-spinner id=\"spinner\" active></paper-spinner>\n        </div>\n\n        <iron-ajax id=\"ajax\" url=\"[[_postUrl]]\" handle-as=\"text\" last-response=\"{{postBody}}\"\n                   on-response=\"_postLoaded\"></iron-ajax>\n\n    </template>\n    <script>\n        (function () {\n            'use strict';\n\n            Polymer({\n\n                is: 'post-page',\n\n                behaviors: [\n                    Polymer.NeonAnimationRunnerBehavior,\n                    Polymer.NeonSharedElementAnimatableBehavior\n                ],\n\n                properties: {\n                    postId: {\n                        type: String,\n                        observer: '_postIdChanged'\n                    },\n                    posts: Array,\n                    heroSettings: {\n                        type: Object,\n                        notify: true\n                    },\n                    selected: {\n                        type: Boolean,\n                        observer: 'updateHeroSettings'\n                    },\n                    _loaded: {\n                        type: Boolean,\n                        value: false\n                    },\n                    _post: Object,\n                    _latestPosts: {\n                        type: Array,\n                        value: []\n                    },\n\n                    animationConfig: {\n                        type: Object,\n                        value: function () {\n                            var cascaded = Polymer.dom(this.root).querySelectorAll('[cascaded]');\n                            var cascadedArray = Array.prototype.slice.call(cascaded);\n                            return {\n                                'entry': [{\n                                    name: 'fade-in-animation',\n                                    animation: 'fade-in-animation',\n                                    node: this,\n                                    timing: {\n                                        delay: 500\n                                    }\n                                }],\n                                'exit': [{\n                                    name: 'cascaded-animation',\n                                    animation: 'transform-animation',\n                                    transformTo: 'translate3d(0, 100%, 0)',\n                                    nodes: cascadedArray\n                                }, {\n                                    name: 'fade-out-animation',\n                                    animation: 'fade-out-animation',\n                                    node: this\n                                }],\n                                'postLoaded': [{\n                                    name: 'cascaded-animation',\n                                    animation: 'transform-animation',\n                                    transformFrom: 'translate3d(0, 100%, 0)',\n                                    nodes: cascadedArray,\n                                    timing: {\n                                        delay: 500\n                                    }\n                                }, {\n                                    name: 'fade-in-animation',\n                                    animation: 'fade-in-animation',\n                                    nodes: cascadedArray,\n                                    timing: {\n                                        delay: 500\n                                    }\n                                }, {\n                                    name: 'scale-down-animation',\n                                    animation: 'scale-down-animation',\n                                    node: this.$.spinner\n                                }]\n                            };\n                        }\n                    }\n                },\n\n                listeners: {\n                    'neon-animation-finish': '_onNeonAnimationFinish'\n                },\n\n                updateHeroSettings: function () {\n                    if (this._post) {\n                        this.heroSettings = {\n                            backgroundColor: this._post.primaryColor,\n                            backgroundImage: this._post.image,\n                            fontColor: '#FFFFFF',\n                            tabBarColor: '#FFFFFF'\n                        };\n                    }\n                },\n\n                _postIdChanged: function () {\n                    if(this.selected) {\n                        this.$.animationWrapper.style.opacity = 0;\n                        this.$.animationWrapper.style.display = 'none';\n                        this.$.spinner.style.opacity = 1;\n\n                        var postIndex = app.getIndexByProperty(this.posts, 'id', this.postId);\n\n                        this._latestPosts[0] = postIndex > 0 ? this.posts[postIndex - 1] : null;\n                        this._latestPosts[1] = postIndex < this.posts.length - 1 ? this.posts[postIndex + 1] : null;\n                        this.notifyPath('_latestPosts', this._latestPosts.slice());\n\n                        this._post = this.posts[postIndex];\n                        this.notifyPath('_post.date', new Date(this._post.posted).toDateString().slice(4));\n                        this.updateHeroSettings();\n\n                        this._postUrl = '/posts/' + this._post.posted + '-' + this.postId + '.markdown';\n                        this.$.ajax.generateRequest();\n                    }\n                },\n\n                _postLoaded: function () {\n                    this._loaded = true;\n                    this.async(function () {\n                        this.$.animationWrapper.style.opacity = 1;\n                        this.$.animationWrapper.style.display = 'block';\n                    }, 100);\n                    this.playAnimation('postLoaded');\n                    this.$.disqus.reset();\n                },\n\n                _onNeonAnimationFinish: function () {\n                    if (this._loaded) {\n                        this.$.spinner.style.opacity = 0;\n                    }\n                }\n            });\n\n        })();\n    </script>\n</dom-module>\n"],"sourceRoot":"/source/"}