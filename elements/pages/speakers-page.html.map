{"version":3,"sources":["pages/speakers-page.html"],"names":[],"mappings":";YACY;gBACI,eAAe;gBACf,mBAAmB;aACtB;;YAED;gBACI,0BAA0B;gBAC1B,sBAAsB;aACzB;;YAED;gBACI,4BAA4B;gBAC5B,YAAY;gBACZ,6BAA6B;aAChC;;YAED;gBACI,sBAAsB;gBACtB,0BAA0B;gBAC1B,oBAAoB;gBACpB,iCAAiC;aACpC;;YAED;gBACI,0BAA0B;gBAC1B,2BAA2B;gBAC3B,cAAc;gBACd,gBAAgB;gBAChB,gBAAgB;aACnB;;YAED;gBACI,iCAAiC;aACpC;;YAED;gBACI,8BAA8B;gBAC9B,kBAAkB;gBAClB,mBAAmB;aACtB;;YAED;gBACI,mBAAmB;gBACnB,cAAc;aACjB;;YAED;gBACI,qBAAqB;aACxB;;YAED;gBACI,qBAAqB;gBACrB,iFAAiF;aACpF;;YAED;gBACI,UAAU;gBACV,cAAc;gBACd,mBAAmB;gBACnB,iBAAiB;gBACjB,kBAAkB;aACrB;;YAED;gBACI,sBAAsB;aACzB;;YAED;gBACI,gCAAgC;gBAChC,uBAAuB;gBACvB,gBAAgB;gBAChB,iBAAiB;aACpB;;YAED;gBACI,eAAe;gBACf,gBAAgB;gBAChB,iBAAiB;aACpB;;YAED;gBACI,cAAc;gBACd,mBAAmB;gBACnB,UAAU;gBACV,eAAe;aAClB;;YAED;gBACI,gBAAgB;aACnB;;YAED;gBACI,iBAAiB;gBACjB,eAAe;gBACf,gBAAgB;aACnB;;YAED;gBACI,mCAAmC;aACtC;;YAED;;gBACI;;gCACI,4BAA4B;;gCAC5B,kCAAkC;iBACrC;;gBAED;gCACI,+CAA+C;gCAC/C,2EAA2E;iBAC9E;CAEJ;;YAED;;gBACI;gCACI,+CAA+C;gCAC/C,2EAA2E;iBAC9E;CAEJ","file":"pages/speakers-page.html","sourcesContent":["<link rel=\"import\" href=\"../../bower_components/polymer/polymer.html\">\n\n<link rel=\"import\" href=\"../../bower_components/iron-flex-layout/iron-flex-layout.html\">\n<link rel=\"import\" href=\"../../bower_components/iron-image/iron-image.html\">\n<link rel=\"import\" href=\"../../bower_components/paper-material/paper-material.html\">\n<link rel=\"import\" href=\"../../bower_components/paper-icon-button/paper-icon-button.html\">\n<link rel=\"import\" href=\"../../bower_components/paper-tooltip/paper-tooltip.html\">\n\n<link rel=\"import\" href=\"../blocks/truncate-marked-text/truncate-marked-text.html\">\n<link rel=\"import\" href=\"../blocks/footer-block/footer-block.html\">\n<link rel=\"import\" href=\"../blocks/speaker-details/speaker-details.html\">\n\n<dom-module id=\"speakers-page\">\n    <template>\n        <style include=\"shared-styles\"></style>\n        <style>\n            :host {\n                display: block;\n                --grid-gutter: 8px;\n            }\n\n            .speakers-container {\n                @apply(--layout-vertical);\n                @apply(--layout-wrap);\n            }\n\n            .speaker {\n                @apply(--layout-horizontal);\n                width: 100%;\n                margin: var(--grid-gutter) 0;\n            }\n\n            .card {\n                @apply(--layout-flex);\n                @apply(--layout-vertical);\n                background: #FFFFFF;\n                color: var(--primary-text-color);\n            }\n\n            .card-content {\n                @apply(--layout-vertical);\n                @apply(--layout-flex-auto);\n                padding: 16px;\n                font-size: 18px;\n                cursor: pointer;\n            }\n\n            .bio {\n                color: var(--primary-text-color);\n            }\n\n            .card-actions {\n                border-top: 1px solid #e8e8e8;\n                padding: 5px 16px;\n                position: relative;\n            }\n\n            .header {\n                position: relative;\n                height: 256px;\n            }\n\n            .photo {\n                @apply(--layout-fit);\n            }\n\n            .photo-overlay {\n                @apply(--layout-fit);\n                background: linear-gradient(to top, rgba(0, 0, 0, 0.5) 4%, rgba(0, 0, 0, 0) 50%);\n            }\n\n            .badges {\n                margin: 0;\n                padding: 16px;\n                position: relative;\n                list-style: none;\n                text-align: right;\n            }\n\n            .badge {\n                display: inline-block;\n            }\n\n            .badge:not(:last-of-type):after {\n                color: rgba(255, 255, 255, 0.8);\n                vertical-align: middle;\n                font-size: 14px;\n                content: \"\\2022\";\n            }\n\n            .badge a {\n                color: #FFFFFF;\n                font-size: 14px;\n                font-weight: 500;\n            }\n\n            .bottom-image-text {\n                padding: 16px;\n                position: absolute;\n                bottom: 0;\n                color: #FFFFFF;\n            }\n\n            .name {\n                font-size: 24px;\n            }\n\n            .title {\n                margin-top: -5px;\n                display: block;\n                font-size: 14px;\n            }\n\n            .social-icon {\n                color: var(--secondary-text-color);\n            }\n\n            @media (min-width: 601px) {\n                .speakers-container {\n                    @apply(--layout-horizontal);\n                    @apply(--layout-center-justified);\n                }\n\n                .speaker {\n                    width: calc(100% / 2 - 3 * var(--grid-gutter));\n                    margin: var(--grid-gutter) var(--grid-gutter) calc(2 * var(--grid-gutter));\n                }\n\n            }\n\n            @media (min-width: 961px) {\n                .speaker {\n                    width: calc(100% / 3 - 4 * var(--grid-gutter));\n                    margin: var(--grid-gutter) var(--grid-gutter) calc(3 * var(--grid-gutter));\n                }\n\n            }\n        </style>\n        <div class=\"container page-header\" cascaded>\n            <div class=\"page-title\">\n                <h3>Speakers</h3>\n            </div>\n        </div>\n        <div class=\"container speakers-container\">\n            <template is=\"dom-repeat\" items=\"[[speakers]]\" as=\"speaker\" on-dom-change=\"_updateCascadedNodes\">\n                <div class=\"speaker\" cascaded>\n                    <paper-material class=\"card\">\n                        <div class=\"header\">\n                            <iron-image src=\"[[speaker.photoUrl]]\" class=\"photo placeholder-color\" preload fade\n                                        sizing=\"cover\"></iron-image>\n                            <div class=\"photo-overlay\"></div>\n                            <ul class=\"badges\">\n                                <template is=\"dom-repeat\" items=\"[[speaker.badges]]\" as=\"badge\">\n                                    <li class=\"badge\">\n                                        <a href=\"[[badge.link]]\" target=\"_blank\">[[badge.name]]</a>\n                                        <paper-tooltip>[[badge.description]]</paper-tooltip>\n                                    </li>\n                                </template>\n                            </ul>\n                            <div class=\"bottom-image-text\">\n                                <span class=\"name\">[[speaker.name]]</span>\n                                <span class=\"title\">[[speaker.company]], [[speaker.country]]</span>\n                            </div>\n                        </div>\n                        <div class=\"card-content\" on-tap=\"_openSpeaker\">\n                            <truncate-marked-text class=\"bio\" text=\"[[speaker.bio]]\" characters=\"220\"\n                                                  break-last-word></truncate-marked-text>\n                        </div>\n                        <div class=\"card-actions\">\n                            <template is=\"dom-repeat\" items=\"[[speaker.socials]]\" as=\"social\">\n                                <a href=\"[[social.link]]\" target=\"_blank\">\n                                    <paper-icon-button class=\"social-icon\"\n                                                       icon$=\"icons:{{social.icon}}\"></paper-icon-button>\n                                </a>\n                            </template>\n                        </div>\n                    </paper-material>\n                </div>\n            </template>\n        </div>\n        <footer-block mailchimp-url=\"http://www.meetup.com/GDGIstanbul/join/\" mailchimp-name=\"meetup\" cascaded></footer-block>\n\n        <speaker-details id=\"speakerDetails\" speaker=\"{{_selectedSpeaker}}\"\n                         entry-animation=\"scale-up-animation\" exit-animation=\"fade-out-animation\"\n                         with-backdrop></speaker-details>\n    </template>\n</dom-module>\n\n<script>\n    (function () {\n        'use strict';\n\n        Polymer({\n\n            is: 'speakers-page',\n\n            behaviors: [\n                Polymer.NeonSharedElementAnimatableBehavior\n            ],\n\n            properties: {\n                speakers: Array,\n                selected: {\n                    type: Boolean,\n                    observer: 'updateHeroSettings'\n                },\n                heroSettings: {\n                    type: Object,\n                    notify: true\n                },\n                speakerId: {\n                    type: Object,\n                    observer: 'openSpeakerDetails'\n                },\n                _selectedSpeaker: Object,\n                _heroSettings: {\n                    type: Object,\n                    /* jshint ignore:start */\n                    value: function () {\n                        return ;\n                    }\n                    /* jshint ignore:end */\n                },\n\n                animationConfig: {\n                    type: Object,\n                    value: function () {\n                        return {\n                            'entry': [{\n                                name: 'fade-in-animation',\n                                animation: 'fade-in-animation',\n                                node: this,\n                                timing: {\n                                    delay: 500\n                                }\n                            }],\n                            'exit': [{\n                                name: 'fade-out-animation',\n                                animation: 'fade-out-animation',\n                                node: this\n                            }]\n                        };\n                    }\n                }\n            },\n\n            observers: [\n                'updateHeroSettings(selected)'\n            ],\n\n            updateHeroSettings: function () {\n                this.heroSettings = this.selected ? this._heroSettings : this.heroSettings;\n            },\n\n            openSpeakerDetails: function () {\n                if(this.selected) {\n                    this.async(function() {\n                        this._selectedSpeaker = this.speakers[app.getIndexByProperty(this.speakers, 'id', this.speakerId)];\n                        this.$.speakerDetails.open();\n                    }, 500);\n                }\n            },\n\n            _updateCascadedNodes: function () {\n                var cascaded = Polymer.dom(this.root).querySelectorAll('[cascaded]');\n                var cascadedArray = Array.prototype.slice.call(cascaded);\n                this.animationConfig.entry.push({\n                    name: 'cascaded-animation',\n                    animation: 'transform-animation',\n                    transformFrom: 'translate3d(0, 100%, 0)',\n                    timing: {\n                        delay: 500\n                    },\n                    nodes: cascadedArray\n                });\n                this.animationConfig.exit.push({\n                    name: 'cascaded-animation',\n                    animation: 'transform-animation',\n                    transformTo: 'translate3d(0, 100%, 0)',\n                    nodes: cascadedArray\n                });\n            },\n\n            _openSpeaker: function (e) {\n                this._selectedSpeaker = e.model.speaker;\n                this.$.speakerDetails.open();\n            }\n        });\n\n    })();\n</script>\n"],"sourceRoot":"/source/"}